_file_name: learner_performance.yaml
always_filter_main_dttm: false
cache_timeout: null
columns:
- advanced_data_type: null
  column_name: course_key
  description: null
  expression: null
  extra: {}
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: LowCardinality(String)
  verbose_name: Course Key
- advanced_data_type: null
  column_name: org
  description: null
  expression: null
  extra: {}
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: LowCardinality(String)
  verbose_name: Org
- advanced_data_type: null
  column_name: attempts
  description: null
  expression: null
  extra: {}
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: Int16
  verbose_name: Attempts
- advanced_data_type: null
  column_name: course_grade
  description: null
  expression: null
  extra: {}
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: Float64
  verbose_name: Course Grade
- advanced_data_type: null
  column_name: success
  description: null
  expression: null
  extra: {}
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: Bool
  verbose_name: Success
- advanced_data_type: null
  column_name: approving_state
  description: null
  expression: null
  extra: {}
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: String
  verbose_name: Approving State
- advanced_data_type: null
  column_name: actor_id
  description: null
  expression: null
  extra: {}
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: String
  verbose_name: Actor Id
- advanced_data_type: null
  column_name: course_name
  description: null
  expression: null
  extra: {}
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: String
  verbose_name: Course Name
- advanced_data_type: null
  column_name: course_run
  description: null
  expression: null
  extra: {}
  filterable: true
  groupby: true
  is_active: true
  is_dttm: false
  python_date_format: null
  type: String
  verbose_name: Course Run
database_uuid: 21174b6c-4d40-4958-8161-d6c3cf5e77b6
default_endpoint: null
description: null
extra: null
fetch_values_predicate: null
filter_select_enabled: true
main_dttm_col: null
metrics:
- currency: null
  d3format: null
  description: null
  expression: count(distinct case when attempts = 1 and success then actor_id else
    null end)/count(distinct case when attempts > 0 then actor_id else null end)
  extra:
    warning_markdown: ''
  metric_name: first_try_correct
  metric_type: null
  verbose_name: Avg % Correct on 1st Attempt
  warning_text: null
- currency: null
  d3format: null
  description: null
  expression: |-
    count(distinct case when approving_state = 'passed' then actor_id else null end)
  extra:
    warning_markdown: ''
  metric_name: count_passing
  metric_type: null
  verbose_name: Count of Passing Grades
  warning_text: null
- currency: null
  d3format: null
  description: null
  expression: 'quantile(0.5)(round(course_grade,2)) '
  extra:
    warning_markdown: ''
  metric_name: med_course_grade
  metric_type: null
  verbose_name: Median Course Grade
  warning_text: null
- currency: null
  d3format: null
  description: null
  expression: round(AVG(course_grade),2)
  extra:
    warning_markdown: ''
  metric_name: avg_course_grade
  metric_type: null
  verbose_name: Avg Course Grade
  warning_text: null
- currency: null
  d3format: null
  description: null
  expression: COUNT(*)
  extra:
    warning_markdown: ''
  metric_name: count
  metric_type: count
  verbose_name: COUNT(*)
  warning_text: null
normalize_columns: false
offset: 0
params: null
schema: 'reporting'
sql: |-
  -- select one record per (learner, problem, course, org) tuple
  -- contains either the first successful attempt
  -- or the most recent unsuccessful attempt
  -- find the timestamp of the earliest successful response
  -- this will be used to pick the xAPI event corresponding to that submission
  with
      full_responses as (
          select
              events.emission_time as emission_time,
              events.org as org,
              events.course_key as course_key,
              events.problem_id as problem_id,
              events.object_id as object_id,
              events.actor_id as actor_id,
              events.responses as responses,
              events.success as success,
              events.attempts as attempts,
              events.interaction_type as interaction_type
          from reporting.dim_learner_response_attempt
          join
              xapi.problem_events events using (
                  org, course_key, problem_id, actor_id, emission_time
              )
          where 1 = 1 {% if filter_values("org") != [] %}
      and org in {{ filter_values("org") | where_in }}
  {% endif %}

  {% if filter_values("course_name") != [] %}
      and course_key in (
          select course_key
          from event_sink.dim_course_names
          where course_name in {{ filter_values("course_name") | where_in }}
      )
  {% endif %}

  {% if filter_values("tag") != [] %}
      and course_key in (
          select course_key
          from
              reporting.dim_most_recent_course_tags
          where
              tag in (select replaceAll(arrayJoin({{ filter_values("tag") }}), '- ', ''))
      )
  {% endif %}
      ),
      int_problem_results as (
          select
              full_responses.emission_time as emission_time,
              full_responses.org as org,
              full_responses.course_key as course_key,
              blocks.course_name as course_name,
              blocks.course_run as course_run,
              full_responses.problem_id as problem_id,
              blocks.block_name as problem_name,
              blocks.display_name_with_location as problem_name_with_location,
              blocks.course_order as course_order,
              concat(
                  '<a href="',
                  full_responses.object_id,
                  '" target="_blank">',
                  blocks.display_name_with_location,
                  '</a>'
              ) as problem_link,
              full_responses.actor_id as actor_id,
              full_responses.responses as responses,
              full_responses.success as success,
              full_responses.attempts as attempts,
              full_responses.interaction_type as interaction_type,
              blocks.graded
          from full_responses
          join
              reporting.dim_course_blocks blocks
              on (
                  full_responses.course_key = blocks.course_key
                  and full_responses.problem_id = blocks.block_id
              )
          where 1 = 1 {% if filter_values("org") != [] %}
      and org in {{ filter_values("org") | where_in }}
  {% endif %}

  {% if filter_values("course_name") != [] %}
      and course_key in (
          select course_key
          from event_sink.dim_course_names
          where course_name in {{ filter_values("course_name") | where_in }}
      )
  {% endif %}

  {% if filter_values("tag") != [] %}
      and course_key in (
          select course_key
          from
              reporting.dim_most_recent_course_tags
          where
              tag in (select replaceAll(arrayJoin({{ filter_values("tag") }}), '- ', ''))
      )
  {% endif %}
      )

  select
      org,
      course_key,
      course_name,
      course_run,
      actor_id,
      success,
      attempts,
      course_grade,
      approving_state
  from reporting.dim_student_status
  left join int_problem_results
  using org, course_key, course_run, actor_id, course_name
  where 1 = 1 {% if filter_values("org") != [] %}
      and org in {{ filter_values("org") | where_in }}
  {% endif %}

  {% if filter_values("course_name") != [] %}
      and course_key in (
          select course_key
          from event_sink.dim_course_names
          where course_name in {{ filter_values("course_name") | where_in }}
      )
  {% endif %}

  {% if filter_values("tag") != [] %}
      and course_key in (
          select course_key
          from
              reporting.dim_most_recent_course_tags
          where
              tag in (select replaceAll(arrayJoin({{ filter_values("tag") }}), '- ', ''))
      )
  {% endif %}
table_name: learner_performance
template_params: null
uuid: ffc33796-bcd4-4e8b-a4e4-ab6517b72116
version: 1.0.0